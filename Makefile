#############################################################################
# Makefile for building: air
# Generated by qmake (2.01a) (Qt 4.8.1) on: ?? 9? 8 13:37:23 2013
# Project:  air.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile air.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = playerPlane.cpp \
		bloodsupply.cpp \
		randomizer.cpp \
		bullet.cpp \
		main.cpp \
		space.cpp \
		bulletfactory.cpp \
		enemyplanelittle.cpp \
		scoringdevice.cpp \
		menuitem.cpp \
		customitem.cpp \
		menuwidget.cpp \
		textitem.cpp \
		bulletsupply.cpp moc_flyer.cpp \
		moc_flightvehicle.cpp \
		moc_randomizer.cpp \
		moc_space.cpp \
		moc_menuitem.cpp \
		moc_customitem.cpp \
		moc_menuwidget.cpp \
		moc_textitem.cpp \
		qrc_image.cpp
OBJECTS       = playerPlane.o \
		bloodsupply.o \
		randomizer.o \
		bullet.o \
		main.o \
		space.o \
		bulletfactory.o \
		enemyplanelittle.o \
		scoringdevice.o \
		menuitem.o \
		customitem.o \
		menuwidget.o \
		textitem.o \
		bulletsupply.o \
		moc_flyer.o \
		moc_flightvehicle.o \
		moc_randomizer.o \
		moc_space.o \
		moc_menuitem.o \
		moc_customitem.o \
		moc_menuwidget.o \
		moc_textitem.o \
		qrc_image.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		air.pro
QMAKE_TARGET  = air
DESTDIR       = 
TARGET        = air

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: air.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile air.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile air.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/air1.0.0 || $(MKDIR) .tmp/air1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/air1.0.0/ && $(COPY_FILE) --parents flyer.h playerPlane.h global.h flightvehicle.h bloodsupply.h randomizer.h bullet.h flypath.h space.h bulletfactory.h enemyplanelittle.h frame.h scoringdevice.h menuitem.h customitem.h menuwidget.h textitem.h bulletsupply.h .tmp/air1.0.0/ && $(COPY_FILE) --parents image.qrc .tmp/air1.0.0/ && $(COPY_FILE) --parents playerPlane.cpp bloodsupply.cpp randomizer.cpp bullet.cpp main.cpp space.cpp bulletfactory.cpp enemyplanelittle.cpp scoringdevice.cpp menuitem.cpp customitem.cpp menuwidget.cpp textitem.cpp bulletsupply.cpp .tmp/air1.0.0/ && (cd `dirname .tmp/air1.0.0` && $(TAR) air1.0.0.tar air1.0.0 && $(COMPRESS) air1.0.0.tar) && $(MOVE) `dirname .tmp/air1.0.0`/air1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/air1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_flyer.cpp moc_flightvehicle.cpp moc_randomizer.cpp moc_space.cpp moc_menuitem.cpp moc_customitem.cpp moc_menuwidget.cpp moc_textitem.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_flyer.cpp moc_flightvehicle.cpp moc_randomizer.cpp moc_space.cpp moc_menuitem.cpp moc_customitem.cpp moc_menuwidget.cpp moc_textitem.cpp
moc_flyer.cpp: global.h \
		flyer.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) flyer.h -o moc_flyer.cpp

moc_flightvehicle.cpp: flyer.h \
		global.h \
		frame.h \
		flightvehicle.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) flightvehicle.h -o moc_flightvehicle.cpp

moc_randomizer.cpp: randomizer.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) randomizer.h -o moc_randomizer.cpp

moc_space.cpp: playerPlane.h \
		flightvehicle.h \
		flyer.h \
		global.h \
		frame.h \
		bulletfactory.h \
		bullet.h \
		enemyplanelittle.h \
		cache.h \
		customitem.h \
		randomizer.h \
		scoringdevice.h \
		bloodsupply.h \
		menuitem.h \
		textitem.h \
		menuwidget.h \
		bulletsupply.h \
		space.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) space.h -o moc_space.cpp

moc_menuitem.cpp: customitem.h \
		menuitem.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) menuitem.h -o moc_menuitem.cpp

moc_customitem.cpp: customitem.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) customitem.h -o moc_customitem.cpp

moc_menuwidget.cpp: menuwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) menuwidget.h -o moc_menuwidget.cpp

moc_textitem.cpp: customitem.h \
		textitem.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) textitem.h -o moc_textitem.cpp

compiler_rcc_make_all: qrc_image.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_image.cpp
qrc_image.cpp: image.qrc \
		image/sky.png \
		image/enemy.png \
		image/menu.png \
		image/player.png \
		image/blood.png
	/usr/bin/rcc -name image image.qrc -o qrc_image.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

playerPlane.o: playerPlane.cpp playerPlane.h \
		flightvehicle.h \
		flyer.h \
		global.h \
		frame.h \
		bulletfactory.h \
		bullet.h \
		enemyplanelittle.h \
		cache.h \
		customitem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o playerPlane.o playerPlane.cpp

bloodsupply.o: bloodsupply.cpp bloodsupply.h \
		flyer.h \
		global.h \
		customitem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bloodsupply.o bloodsupply.cpp

randomizer.o: randomizer.cpp randomizer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o randomizer.o randomizer.cpp

bullet.o: bullet.cpp bullet.h \
		enemyplanelittle.h \
		flightvehicle.h \
		flyer.h \
		global.h \
		frame.h \
		cache.h \
		customitem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bullet.o bullet.cpp

main.o: main.cpp space.h \
		playerPlane.h \
		flightvehicle.h \
		flyer.h \
		global.h \
		frame.h \
		bulletfactory.h \
		bullet.h \
		enemyplanelittle.h \
		cache.h \
		customitem.h \
		randomizer.h \
		scoringdevice.h \
		bloodsupply.h \
		menuitem.h \
		textitem.h \
		menuwidget.h \
		bulletsupply.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

space.o: space.cpp space.h \
		playerPlane.h \
		flightvehicle.h \
		flyer.h \
		global.h \
		frame.h \
		bulletfactory.h \
		bullet.h \
		enemyplanelittle.h \
		cache.h \
		customitem.h \
		randomizer.h \
		scoringdevice.h \
		bloodsupply.h \
		menuitem.h \
		textitem.h \
		menuwidget.h \
		bulletsupply.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o space.o space.cpp

bulletfactory.o: bulletfactory.cpp bulletfactory.h \
		bullet.h \
		enemyplanelittle.h \
		flightvehicle.h \
		flyer.h \
		global.h \
		frame.h \
		cache.h \
		customitem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bulletfactory.o bulletfactory.cpp

enemyplanelittle.o: enemyplanelittle.cpp enemyplanelittle.h \
		flightvehicle.h \
		flyer.h \
		global.h \
		frame.h \
		cache.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o enemyplanelittle.o enemyplanelittle.cpp

scoringdevice.o: scoringdevice.cpp scoringdevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o scoringdevice.o scoringdevice.cpp

menuitem.o: menuitem.cpp menuitem.h \
		customitem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o menuitem.o menuitem.cpp

customitem.o: customitem.cpp customitem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o customitem.o customitem.cpp

menuwidget.o: menuwidget.cpp menuwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o menuwidget.o menuwidget.cpp

textitem.o: textitem.cpp textitem.h \
		customitem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o textitem.o textitem.cpp

bulletsupply.o: bulletsupply.cpp bulletsupply.h \
		flyer.h \
		global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bulletsupply.o bulletsupply.cpp

moc_flyer.o: moc_flyer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_flyer.o moc_flyer.cpp

moc_flightvehicle.o: moc_flightvehicle.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_flightvehicle.o moc_flightvehicle.cpp

moc_randomizer.o: moc_randomizer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_randomizer.o moc_randomizer.cpp

moc_space.o: moc_space.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_space.o moc_space.cpp

moc_menuitem.o: moc_menuitem.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_menuitem.o moc_menuitem.cpp

moc_customitem.o: moc_customitem.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_customitem.o moc_customitem.cpp

moc_menuwidget.o: moc_menuwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_menuwidget.o moc_menuwidget.cpp

moc_textitem.o: moc_textitem.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_textitem.o moc_textitem.cpp

qrc_image.o: qrc_image.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_image.o qrc_image.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

